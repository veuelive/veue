= content_for :title do
  = "#{current_video.title || 'Video'} - #{current_channel.name} - Veue"
.content-area#video-show{
  "data": {
    "controller": "audience-view audience--player-controls",
    "audience-view": {
      "stream-type": current_video.stream_type
    },
    "video-id": current_video.id,
    "channel-id": current_channel.id,
    "channel-slug": current_channel.slug,
    "start-offset": current_video.start_offset,
    "end-offset": current_video.end_offset,
  }
}
  .content-area__primary{data: {controller: "canvas-size-observer"}}
    = render partial: "channels/videos/partials/header"
    .primary-video{"data": { controller: "audience--movable-pip" }}
      .mute-banner{style: "display: none;", data: { target: "audience-view.muteBanner", action: "click->audience-view#toggleAudio click->audience-view#hideMuteBanner"}}
        = svg_tag("volume-mute", height: 14, width: 19)
        = t("video.tap_to_unmute")
      %canvas.primary-canvas{
        "data-target": "audience-view.primaryCanvas canvas-size-observer.canvas",
        width: 1200,
        height: 740
      }
      = render partial: "channels/videos/partials/pip_area"
      = render partial: "channels/videos/partials/player_controls"
    = render partial: "channels/videos/partials/streamer_profile"

    = render partial: "channels/videos/partials/recent_broadcasts"
    = render partial: "layouts/footer"

  .content-area__secondary
    %canvas.fixed-secondary-canvas{
      "data-target": "audience-view.fixedSecondaryCanvas",
      width: 420,
      height: 340
    }
    %video.player__video.viewer{
      "data-target": "audience-view.video audience--player-controls.video",
      crossorigin: "anonymous",
      src: current_video.hls_url,
      style: "width: 0px; height: 0;",
      playsinline: "playsinline",
    }
    = render partial: "shared/chat", locals: { video: current_video }
