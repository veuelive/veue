.chat-section{
  data: {
    controller: "chat--scroll"
  }
}
  .messages-overflow-container{
    data: {
      target: "chat--scroll.messagesContainer"
    }
  }
    .messages{
      data: {
        controller: "chat--messages",
        target: "chat--scroll.messages"
      }
    }
  %button.chat-scroll{
    data: {
      target: "chat--scroll.scrollButton",
      action: "chat--scroll#scrollToBottom"
    }
  }
    = svg_tag "chevron"
  .like-notification{
    data: {
      controller: "chat--reaction-notification"
    }
  }
  - if video.finished?
    .stream-end
      .stream-end--content
        This stream has ended
  - else
    .message-write{
      data: {
        controller: "chat--send-message",
        "show-when-logged-in": true
      }
    }
      .chat-controls
        .write-area{
          placeholder: 'Send a message',
          contenteditable: 'plaintext-only',
          role: "textbox",
          data: {
            action: "keydown->chat--send-message#chatBoxKeyDown input->chat--send-message#toggleIcon",
            target: "chat--send-message.messageInput",
            "message-key": SecureRandom.uuid
          }
        }
        = render "shared/reaction_button"
        .message-write__send{
          data: {
            target: "chat--send-message.messageSend",
            action: "click->chat--send-message#sendMessage"
          }
        }
          = svg_tag "send"
    .message-login-prompt{
      data: {
        action: "click->authentication#showModal",
        "show-when-logged-out": true
      }
    }
      .chat-controls
        .write-area{
          placeholder: 'Send a message'
        }
        .reaction-button-area
          = svg_tag "heart"
