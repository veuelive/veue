name: Rails Tests

on: [pull_request]

jobs:
  brakeman:
    name: runner / brakeman
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: brakeman
        uses: reviewdog/action-brakeman@v1
        with:
          brakeman_version: gemfile
          github_token: ${{ secrets.github_token }}
          reporter: github-pr-check
  woke:
    name: woke
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: get-woke/woke-action-reviewdog@v0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
  rubocop:
    name: runner / rubocop
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: rubocop
        uses: reviewdog/action-rubocop@v1
        with:
          rubocop_version: gemfile
          rubocop_extensions: rubocop-rails:gemfile rubocop-rspec:gemfile
          github_token: ${{ secrets.github_token }}
          reporter: github-pr-check
  eslint:
    name: runner / eslint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: eslint
        uses: reviewdog/action-eslint@v1
        with:
          eslint_flags: 'app/ spec/'
  jsLinters:
    name: runner / prettier
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: 14.10.0
      - name: Prettier
        run: npx prettier -c app spec
  rspec:
    name: rspec basic
    runs-on: ubuntu-latest
    services:
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_USER: "postgres"
          POSTGRES_PASSWORD: ""
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10ms
          --health-timeout 500ms
          --health-retries 35
        ports:
          - "5432:5432"
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.7
          bundler-cache: true
      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: 14.10.0
      - name: Find yarn cache location
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: JS package cache
        uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install packages
        run: |
          yarn install --pure-lockfile
      - name: Setup test database
        run: |
          bundle exec rake db:setup
      - name: Run tests
        run: bundle exec rspec --exclude-pattern "spec/system/**/*"

  rspecSystem:
      name: rspec system
      runs-on: ubuntu-latest
      strategy:
        matrix:
          browser: ["chrome"]#, "firefox"]
      steps:
        - name: Checkout code
          uses: actions/checkout@v2
        - name: Setup Ruby
          uses: ruby/setup-ruby@v1
          with:
            ruby-version: 2.7
            bundler-cache: true
        - name: Setup Node
          uses: actions/setup-node@v1
          with:
            node-version: 14.10.0
        - name: Find yarn cache location
          id: yarn-cache
          run: echo "::set-output name=dir::$(yarn cache dir)"
        - name: JS package cache
          uses: actions/cache@v1
          with:
            path: ${{ steps.yarn-cache.outputs.dir }}
            key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
            restore-keys: |
              ${{ runner.os }}-yarn-
        - name: Install packages
          run: |
            yarn install --pure-lockfile
        - name: Setup test database
          run: |
            bundle exec rake db:setup
        - name: Run tests
          env:
            SPEC_BROWSER: headless_${{matrix.browser}}
          run: bundle exec rspec spec/system
        - name: Archive Tmp Folder
          uses: actions/upload-artifact@v2
          if: ${{ failure() }}
          with:
            name: ${{matrix.browser}} screenshots
            path: tmp/screenshots
        - name: Archive Log Folder
          uses: actions/upload-artifact@v2
          if: ${{ failure() }}
          with:
            name: logs ${{matrix.browser}}
            path: log
  rspecSafari:
    if: ${{ false }}
    name: rspec safari
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.7
          bundler-cache: true
      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: 14.10.0
      - name: Find yarn cache location
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: JS package cache
        uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install packages
        run: |
          yarn install --pure-lockfile
      - name: Setup test database
        env:
          RAILS_ENV: test
        run: |
          bundle exec rake db:setup

      - name: Run tests
        env:
          SPEC_BROWSER: safari
        run: bundle exec rspec spec/system
      - name: Archive Tmp Folder
        uses: actions/upload-artifact@v2
        if: ${{ failure() }}
        with:
          name: safari screenshots
          path: tmp/screenshots
      - name: Archive Log Folder
        uses: actions/upload-artifact@v2
        if: ${{ failure() }}
        with:
          name: safari logs
          path: log
  jest:
    name: jest
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: 14.10.0
      - name: Find yarn cache location
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: JS package cache
        uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install packages
        run: |
          yarn install --pure-lockfile
      - name: Run Jest Tests
        run: yarn jest
